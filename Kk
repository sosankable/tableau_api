import zipfile
import os
import shutil
import xml.etree.ElementTree as ET

TWBX_FILE = 'your_original.twbx'
EXTRACT_DIR = 'extracted'
FIXED_TWBX = 'final_output.twbx'

with zipfile.ZipFile(TWBX_FILE, 'r') as z:
    z.extractall(EXTRACT_DIR)
    zip_entries = z.infolist()

# 找出 .twb
twb_path = next(f for f in os.listdir(EXTRACT_DIR) if f.endswith('.twb'))
twb_full_path = os.path.join(EXTRACT_DIR, twb_path)

# 解析 twb 找出所有 Excel 路徑
tree = ET.parse(twb_full_path, parser=ET.XMLParser(encoding='utf-16'))
root = tree.getroot()

data_dir = os.path.join(EXTRACT_DIR, 'Data')
os.makedirs(data_dir, exist_ok=True)

# 建立 zip 內檔案名列表
all_zip_paths = [entry.filename for entry in zip_entries]

for conn in root.iter('connection'):
    if conn.attrib.get('class') == 'excel-direct':
        orig_filename = os.path.basename(conn.attrib['filename'])
        new_path = f'Data/{orig_filename}'

        # 在 zip 解壓資料夾中模糊比對找到檔名含有該 Excel 名的路徑
        match_path = None
        for p in all_zip_paths:
            if orig_filename in os.path.basename(p):
                match_path = p
                break

        if match_path:
            from_path = os.path.join(EXTRACT_DIR, match_path)
            to_path = os.path.join(EXTRACT_DIR, new_path)
            shutil.copy(from_path, to_path)
            conn.set('filename', new_path)
        else:
            print(f'[警告] 找不到與 {orig_filename} 對應的 Excel')

# 儲存修正後 twb
fixed_twb_path = os.path.join(EXTRACT_DIR, 'fixed.twb')
tree.write(fixed_twb_path, encoding='utf-16', xml_declaration=True)

# 壓回新的 .twbx
with zipfile.ZipFile(FIXED_TWBX, 'w', zipfile.ZIP_DEFLATED) as z:
    z.write(fixed_twb_path, arcname=twb_path)
    for root_dir, _, files in os.walk(data_dir):
        for f in files:
            full_path = os.path.join(root_dir, f)
            rel_path = os.path.relpath(full_path, EXTRACT_DIR)
            z.write(full_path, arcname=rel_path)
